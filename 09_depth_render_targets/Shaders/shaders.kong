struct vertex_in {
	pos: float3;
}

struct vertex_out {
	pos: float4;
}

fun pos(input: vertex_in): vertex_out {
	var output: vertex_out;
	
	output.pos.x = input.pos.x;
	output.pos.y = input.pos.y;
	output.pos.z = 0.5;
	output.pos.w = 1.0;

	return output;
}

fun pix(input: vertex_out): float4 {
	var output: float4;
	output.x = 1.0;
	output.y = 0.0;
	output.z = 0.0;
	output.w = 1.0;
	return output;
}

#[pipe]
struct pipeline {
	vertex = pos;
	fragment = pix;
}

struct fs_vertex_in {
	pos: float2;
}

struct fs_vertex_out {
	pos: float4;
	tex_coord: float2;
}

fun fs_pos(input: fs_vertex_in): fs_vertex_out {
	var madd: float2;
	madd.x = 0.5;
	madd.y = 0.5;
	
	var output: fs_vertex_out;
	output.tex_coord = input.pos.xy * madd + madd;

	output.pos.x = input.pos.x;
	output.pos.y = input.pos.y;
	output.pos.z = 0.0;
	output.pos.w = 1.0;

	return output;
}

const fs_texture: tex2d;
const fs_sampler: sampler;

fun fs_pix(input: fs_vertex_out): float4 {
	return sample_lod(fs_texture, fs_sampler, input.tex_coord, 0.0);
}

#[pipe]
struct fs_pipeline {
	vertex = fs_pos;
	fragment = fs_pix;
}
